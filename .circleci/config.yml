version: 2.1

commands:
  initworkingdir:
    steps:
      - run:
          name: Init Dir
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci
            sudo chown -R circleci ~/go
            mkdir -p ~/go/out/tests
            mkdir -p ~/go/out/logs
            mkdir -p /home/circleci/logs
            GOROOT=$(go env GOROOT)
            sudo rm -r $(go env GOROOT)
            sudo mkdir $GOROOT
            LATEST=$(curl -s https://golang.org/VERSION?m=text)
            curl https://dl.google.com/go/${LATEST}.linux-amd64.tar.gz | sudo tar xz -C $GOROOT --strip-components=1

  setupkubernetes:
    steps:
      - run:
          name: Setup Kubernetes
          command: ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci/build/kubernetes/k8s_setup.sh

  buildcorednsimage:
    steps:
      - run:
          name: Build latest CoreDNS Docker image
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/coredns ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            make coredns SYSTEM="GOOS=linux" && \
            docker build -t coredns . && \
            kind load docker-image coredns

  buildkubernetaiimage:
    steps:
      - run:
          name: Build latest CoreDNS+Kubernetai Docker image
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/kubernetai
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/kubernetai ~/go/src/${CIRCLE_PROJECT_USERNAME}/kubernetai

            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/kubernetai
            GO111MODULE=on go get -v -d
            make coredns SYSTEM="GOOS=linux" && \
            mv ./coredns ../coredns/
            cd ../coredns/

            docker build -t coredns .
            kind load docker-image coredns

  buildmetadataedns0image:
    steps:
      - run:
          name: Build latest CoreDNS+metadata_edns0 Docker image
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/metadata_edns0
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/metadata_edns0 ~/go/src/${CIRCLE_PROJECT_USERNAME}/metadata_edns0

            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/metadata_edns0
            GO111MODULE=on go get -v -d
            make coredns SYSTEM="GOOS=linux" && \
            mv ./coredns ../coredns/
            cd ../coredns/

            docker build -t coredns .
            kind load docker-image coredns

executors:
  default-executor:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci
    environment:
      - KIND_VERSION: v0.10.0
      - KUBECONFIG: /home/circleci/.kube/kind-config-kind


jobs:
  coredns-benchmark-tests:
    executor: default-executor
    steps:
      - initworkingdir
      - checkout
      - run:
          name: Clone CoreDNS repo
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/coredns ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
      - run:
          name: Run CoreDNS Benchmarks
          command: |
            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            go test -v -bench=.  ./...
  kubernetes-tests:
    parameters:
      k8s-version:
        type: string
    environment:
      - K8S_VERSION: <<parameters.k8s-version>>
    executor:
      name: default-executor
    steps:
      - initworkingdir
      - checkout
      - setupkubernetes
      - buildcorednsimage
      - run:
          name: Run Kubernetes tests
          command: |
            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci/test/kubernetes
            go mod download
            GO111MODULE=on go test -v ./...
  k8s-deployment-tests:
    environment:
      - K8S_VERSION: v1.20.2
    executor: default-executor
    steps:
      - initworkingdir
      - checkout
      - setupkubernetes
      - run:
          name: Run Kubernetes deployment tests
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/deployment
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/deployment ~/go/src/${CIRCLE_PROJECT_USERNAME}/deployment
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/coredns ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci/test/k8sdeployment
            go mod download
            GO111MODULE=on go test -v ./...
  external-plugin-tests:
    environment:
      - K8S_VERSION: v1.20.2
    executor: default-executor
    steps:
      - initworkingdir
      - checkout
      - setupkubernetes
      - run:
          name: Clone CoreDNS repo
          command: |
            mkdir -p ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/coredns ~/go/src/${CIRCLE_PROJECT_USERNAME}/coredns
      - buildkubernetaiimage
      - run:
          name: Run Kubernetai plugin tests
          command: |
            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci/test/kubernetai
            go mod download
            GO111MODULE=on go test -v ./...
      - buildmetadataedns0image
      - run:
          name: Run metadata_edns0 plugin tests
          command: |
            cd ~/go/src/${CIRCLE_PROJECT_USERNAME}/ci/test/metadata_edns0
            go mod download
            GO111MODULE=on go test -v ./...

workflows:
  integration-tests:
    jobs:
      - coredns-benchmark-tests
      - k8s-deployment-tests
      - external-plugin-tests
      - kubernetes-tests:
          matrix:
            parameters:
              k8s-version: ["v1.20.2", "v1.19.7", "v1.18.15"]
